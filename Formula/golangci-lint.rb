# This file was generated by GoReleaser. DO NOT EDIT.
class GolangciLint < Formula
  desc "Fast linters runner for Go."
  homepage "https://golangci.com"
  version "1.32.1"
  bottle :unneeded

  if OS.mac?
    url "https://github.com/golangci/golangci-lint/releases/download/v1.32.1/golangci-lint-1.32.1-darwin-amd64.tar.gz"
    sha256 "b8159a2274e48bfbee80b862678cf9303ff5cbacdac77f5826ff82f61708db88"
  elsif OS.linux?
    if Hardware::CPU.intel?
      url "https://github.com/golangci/golangci-lint/releases/download/v1.32.1/golangci-lint-1.32.1-linux-amd64.tar.gz"
      sha256 "913ada29a2d38313a10145baa7b86484d3634102c74732cb0fb97e10a195bb93"
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/golangci/golangci-lint/releases/download/v1.32.1/golangci-lint-1.32.1-linux-arm64.tar.gz"
        sha256 "727211db865762f5752a95768bb7025c91706d074f32cb947cf1b39d69752f47"
      else
        url "https://github.com/golangci/golangci-lint/releases/download/v1.32.1/golangci-lint-1.32.1-linux-armv6.tar.gz"
        sha256 "a5f2885adca863ecdf62b2b328a5af6744bbee7acba247771cb99936c1dfe1c6"
      end
    end
  end

  def install
    bin.install "golangci-lint"
    output = Utils.popen_read("#{bin}/golangci-lint completion bash")
    (bash_completion/"golangci-lint").write output
    output = Utils.popen_read("#{bin}/golangci-lint completion zsh")
    (zsh_completion/"_golangci-lint").write output
    output = Utils.popen_read("#{bin}/golangci-lint completion fish")
    (fish_completion/"eksctl.fish").write output
    prefix.install_metafiles
  end

  test do
    system "#{bin}/golangci-lint --version"
  end
end
